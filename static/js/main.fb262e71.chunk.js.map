{"version":3,"sources":["components/Home/Home.module.css","components/UsersApp/UsersApp.module.css","actions/rootAction.js","components/Home/Home.js","actions/usersAppAction.js","actions/appRatingAction.js","components/UsersApp/UsersApp.js","App.js","serviceWorker.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","axios","require","rootAction","dispatch","get","then","response","type","payload","data","catch","error","console","log","message","Home","simpleAction","event","props","appButtonHandler","accountID","userName","history","push","this","className","styles","home","usersData","usersTable","Object","entries","map","items","key","account","name","onClick","usersError","Component","connect","state","usersAppAction","usersAccountId","appRatingAction","accountId","accountsKey","ratingValue","put","rating","UsersApp","ratingHandler","e","match","params","usersAppData","apps","location","appTitle","title","initialRating","usersAppError","App","exact","path","component","render","Boolean","window","hostname","initialState","rootReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb262e71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__2b9mU\",\"usersTable\":\"Home_usersTable__3Eygh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appTitle\":\"UsersApp_appTitle__1GIMK\"};","const axios = require(\"axios\");\r\n// import axios from 'axios';\r\n\r\nconst rootAction = () => (dispatch) => {\r\n    axios\r\n      .get(`https://beezer-com.firebaseio.com/users.json`)\r\n      .then((response) => {\r\n        dispatch({\r\n          type: \"USERS_LIST\",\r\n          payload: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n        dispatch({\r\n          type: \"USERS_LIST_ERROR\",\r\n          payload: error.message,\r\n        });\r\n      });\r\n};\r\n\r\nexport default rootAction;\r\n\r\n// https://beezer-com.firebaseio.com/accounts.json","import React, { Component } from \"react\";\r\nimport styles from \"../Home/Home.module.css\";\r\nimport rootAction from \"../../actions/rootAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.props.rootAction();\r\n  }\r\n\r\n  simpleAction = (event) => {\r\n    this.props.rootAction();\r\n  };\r\n\r\n  appButtonHandler = (accountID, userName) => {\r\n    this.props.history.push(`/${accountID}`, userName);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.home}>\r\n        <h1><u>List of Users</u></h1>\r\n        {this.props.usersData ?\r\n        <table className={styles.usersTable}>\r\n          <thead>\r\n            <tr>\r\n              <th>Account ID</th>\r\n              <th>Users Name</th>\r\n              <th>Apps</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              {this.props.usersData && Object.entries(this.props.usersData).map((items) => (\r\n                <tr key={items[0]}>\r\n                  <td>{items[1].account}</td>\r\n                  <td>{items[1].name}</td>\r\n                  <td>\r\n                      <button\r\n                      onClick={(accountID, userName) =>\r\n                        this.appButtonHandler(items[1].account, items[1].name)\r\n                      }\r\n                    >\r\n                      Visit my App\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n         : \r\n         <p>{this.props.usersError}</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  usersData: state.usersData,\r\n  usersError: state.usersError\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  rootAction: () => dispatch(rootAction()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","const axios = require(\"axios\");\r\n// import axios from 'axios';\r\n\r\nconst usersAppAction = (usersAccountId) => (dispatch) => {\r\n    axios\r\n      .get(`https://beezer-com.firebaseio.com/accounts/${usersAccountId}.json`)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        dispatch({\r\n          type: \"USERS_APP_LIST\",\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch({\r\n            type: \"USERS_APP_ERROR\",\r\n            payload: error.message\r\n          });\r\n  \r\n      });\r\n};\r\n\r\nexport default usersAppAction;\r\n","const axios = require(\"axios\");\r\n// import axios from 'axios';\r\n\r\nconst appRatingAction = (accountId, accountsKey, ratingValue) => (dispatch) => {\r\n    axios\r\n      .put(`https://beezer-com.firebaseio.com/accounts/${accountId}/apps/${accountsKey}/rating.json`, {\r\n          rating: ratingValue\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        dispatch({\r\n          type: \"APPS_RATING\",\r\n          payload: response.data\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch({\r\n            type: \"APPS_RATING_ERROR\",\r\n            payload: error.message\r\n          });\r\n  \r\n      });\r\n};\r\n\r\nexport default appRatingAction;\r\n","import React, { Component } from \"react\";\r\nimport usersAppAction from \"../../actions/usersAppAction\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"../UsersApp/UsersApp.module.css\";\r\n// var Rating = require('react-rating');\r\nimport Rating from \"react-rating\";\r\nimport appRatingAction from '../../actions/appRatingAction';\r\nclass UsersApp extends Component {\r\n  componentDidMount() {\r\n    this.props.usersAppAction(this.props.match.params.accountId);\r\n  }\r\n\r\n  ratingHandler = (e, accountsKey) => {\r\n      console.log(this.props.match.params.accountId);\r\n      this.props.appRatingAction(this.props.match.params.accountId, accountsKey, e);\r\n    //   https://beezer-com.firebaseio.com/accounts/${this.props.match.params.accountId}/apps/${accountsKey}.json\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.usersAppData.apps ? (\r\n          this.props.usersAppData.apps &&\r\n          Object.entries(this.props.usersAppData.apps).map((items) => (\r\n            <div key={items[0]}>\r\n              <h1>\r\n                <u>\r\n                  Hi {this.props.location.state},Welcome to {items[0]}\r\n                </u>\r\n              </h1>\r\n              <h1 className={styles.appTitle}>App Title : {items[1].title}</h1>\r\n              <div>\r\n                <Rating\r\n                  initialRating={0}\r\n                  onClick={(e, accountsKey) => {\r\n                    this.ratingHandler(e, items[0])\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h1>{this.props.usersAppError}</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  usersAppData: state.usersAppData,\r\n  usersAppError: state.usersAppError,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  usersAppAction: (usersAccountId) => dispatch(usersAppAction(usersAccountId)),\r\n  appRatingAction: (accountId, accountsKey, ratingValue) => dispatch(appRatingAction(accountId, accountsKey, ratingValue))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersApp);","import React, { Component } from \"react\";\nimport \"./App.css\";\n// import rootAction from \"./actions/rootAction\";\n// import { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './components/Home/Home';\nimport UsersApp from './components/UsersApp/UsersApp';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  // simpleAction = (event) => {\n  //   this.props.rootAction();\n  // };\n  // {/* <div className=\"App\">\n  //       <p>{this.props.result}</p>\n  //       <button onClick={this.simpleAction}>Test redux action</button>\n  //     </div> */}\n\n  render() {\n    // console.log(this.props.result);\n    return (\n      <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          {/* <Route path=\"/pro-organiser-application\" component={Home} /> */}\n          <Route path=\"/:accountId\" component={UsersApp} />\n          {/* <Route path=\"/:id/:boardName\" component={Boards} /> */}\n          <Route render={() => <h2>404 Page Not Found</h2>} />\n        </Switch>\n      </div>\n    </Router>\n    );\n  }\n}\n\n\n\n// const mapStateToProps = (state) => ({\n//   result: state.result,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   rootAction: () => dispatch(rootAction()),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  usersData: [],\r\n  usersError: '',\r\n  usersAppData: [],\r\n  usersAppError: ''\r\n};\r\n\r\nconst rootReducer = (state = { ...initialState }, action) => {\r\n  switch (action.type) {\r\n    case \"USERS_LIST\":\r\n      return {\r\n        ...state,\r\n        usersData: action.payload,\r\n      };\r\n      case \"USERS_LIST_ERROR\":\r\n        return {\r\n          ...state,\r\n          usersError: action.payload\r\n        }\r\n      case \"USERS_APP_LIST\":\r\n        return {\r\n          ...state,\r\n          usersAppData: action.payload\r\n        }\r\n        case \"USERS_APP_ERROR\":\r\n          return {\r\n            ...state,\r\n            usersAppError: action.payload\r\n          }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}